package body GenericProtectedDeck is

   protected body ProtectedOrderedQueue is

      procedure Push(InputItem : in Item; Success : out Boolean) is
         Temp1 : Integer;
         Temp2 : Integer;
      begin
         if IsFull then
            Success := False;
            return;
         else
            if IsEmpty then
               Queue(Last) := InputItem;
               Last := (Last + 1) mod Size;
               Count := Count + 1;
            else
               Temp1 := Front;
               while Temp1 /= Last and then GetPriority(InputItem) >= GetPriority(Queue(Temp1)) loop
                  Temp1 := (Temp1 + 1) mod Size;
               end loop;
               if Temp1 = L then
                  Queue(Last) := InputItem;
                  Last := (Last + 1) mod Size;
                  Count := Count + 1;
               else
                  Temp2 := Last;
                  while Temp2 /= Temp1 loop
                  end loop;
               end if;
            end if;
         end if;
      end Push;

      procedure Pop(OutputItem : out Item; Success : out Boolean) is
      begin
      end Pop;

      function IsFull return Boolean is
      begin
         return Count = Size;
      end IsFull;

      function IsEmpty return Boolean is
      begin
         return Count = 0;
      end IsEmpty;

   end ProtectedOrderedQueue;

end GenericProtectedQueue;